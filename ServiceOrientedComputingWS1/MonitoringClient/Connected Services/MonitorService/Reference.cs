//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonitoringClient.MonitorService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientRequest", Namespace="http://schemas.datacontract.org/2004/07/SOAPLibraryVelib")]
    public enum ClientRequest : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetCities = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetAvailableBikes = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetStationsForCity = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetInformations = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerRequest", Namespace="http://schemas.datacontract.org/2004/07/SOAPLibraryVelib")]
    public enum ServerRequest : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetCitiesRequest = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetStationInformationRequest = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetStationsRequest = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetStationsOfCityRequest = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MonitorService.IMonitorService")]
    public interface IMonitorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/GetConnectedClients", ReplyAction="http://tempuri.org/IMonitorService/GetConnectedClientsResponse")]
        int GetConnectedClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/GetConnectedClients", ReplyAction="http://tempuri.org/IMonitorService/GetConnectedClientsResponse")]
        System.Threading.Tasks.Task<int> GetConnectedClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/GetNumberOfClientRequests", ReplyAction="http://tempuri.org/IMonitorService/GetNumberOfClientRequestsResponse")]
        int GetNumberOfClientRequests(MonitoringClient.MonitorService.ClientRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/GetNumberOfClientRequests", ReplyAction="http://tempuri.org/IMonitorService/GetNumberOfClientRequestsResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfClientRequestsAsync(MonitoringClient.MonitorService.ClientRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/GetNumberOfServerRequestsToVelibWS", ReplyAction="http://tempuri.org/IMonitorService/GetNumberOfServerRequestsToVelibWSResponse")]
        int GetNumberOfServerRequestsToVelibWS(MonitoringClient.MonitorService.ServerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/GetNumberOfServerRequestsToVelibWS", ReplyAction="http://tempuri.org/IMonitorService/GetNumberOfServerRequestsToVelibWSResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfServerRequestsToVelibWSAsync(MonitoringClient.MonitorService.ServerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/GetAverageExecutionTime", ReplyAction="http://tempuri.org/IMonitorService/GetAverageExecutionTimeResponse")]
        long GetAverageExecutionTime(MonitoringClient.MonitorService.ClientRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorService/GetAverageExecutionTime", ReplyAction="http://tempuri.org/IMonitorService/GetAverageExecutionTimeResponse")]
        System.Threading.Tasks.Task<long> GetAverageExecutionTimeAsync(MonitoringClient.MonitorService.ClientRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMonitorServiceChannel : MonitoringClient.MonitorService.IMonitorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonitorServiceClient : System.ServiceModel.ClientBase<MonitoringClient.MonitorService.IMonitorService>, MonitoringClient.MonitorService.IMonitorService {
        
        public MonitorServiceClient() {
        }
        
        public MonitorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonitorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetConnectedClients() {
            return base.Channel.GetConnectedClients();
        }
        
        public System.Threading.Tasks.Task<int> GetConnectedClientsAsync() {
            return base.Channel.GetConnectedClientsAsync();
        }
        
        public int GetNumberOfClientRequests(MonitoringClient.MonitorService.ClientRequest request) {
            return base.Channel.GetNumberOfClientRequests(request);
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfClientRequestsAsync(MonitoringClient.MonitorService.ClientRequest request) {
            return base.Channel.GetNumberOfClientRequestsAsync(request);
        }
        
        public int GetNumberOfServerRequestsToVelibWS(MonitoringClient.MonitorService.ServerRequest request) {
            return base.Channel.GetNumberOfServerRequestsToVelibWS(request);
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfServerRequestsToVelibWSAsync(MonitoringClient.MonitorService.ServerRequest request) {
            return base.Channel.GetNumberOfServerRequestsToVelibWSAsync(request);
        }
        
        public long GetAverageExecutionTime(MonitoringClient.MonitorService.ClientRequest request) {
            return base.Channel.GetAverageExecutionTime(request);
        }
        
        public System.Threading.Tasks.Task<long> GetAverageExecutionTimeAsync(MonitoringClient.MonitorService.ClientRequest request) {
            return base.Channel.GetAverageExecutionTimeAsync(request);
        }
    }
}
